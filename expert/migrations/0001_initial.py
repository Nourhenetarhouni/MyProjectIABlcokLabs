# Generated by Django 5.2.3 on 2025-07-22 02:50

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ExpertLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("session_id", models.CharField(blank=True, max_length=100)),
                ("document_id", models.IntegerField()),
                ("document_title", models.CharField(max_length=500)),
                ("page_id", models.IntegerField(blank=True, null=True)),
                ("page_number", models.IntegerField(blank=True, null=True)),
                ("page_text", models.TextField(blank=True)),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("annotation_validated", "Annotation validée"),
                            ("annotation_rejected", "Annotation rejetée"),
                            ("annotation_modified", "Annotation modifiée"),
                            ("annotation_deleted", "Annotation supprimée"),
                            ("annotation_created", "Annotation créée"),
                            ("validation_undone", "Validation annulée"),
                            ("document_reviewed", "Document révisé"),
                            ("sentence_reviewed", "Phrase révisée"),
                            ("annotation_type_created", "Type d'annotation créé"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "annotation_id",
                    models.IntegerField(
                        blank=True, help_text="ID de l'annotation concernée", null=True
                    ),
                ),
                (
                    "annotation_text",
                    models.TextField(blank=True, help_text="Texte de l'annotation"),
                ),
                (
                    "annotation_entity_type",
                    models.CharField(blank=True, max_length=100),
                ),
                (
                    "annotation_start_position",
                    models.IntegerField(blank=True, null=True),
                ),
                ("annotation_end_position", models.IntegerField(blank=True, null=True)),
                (
                    "old_text",
                    models.TextField(
                        blank=True, help_text="Ancien texte (pour modifications)"
                    ),
                ),
                (
                    "new_text",
                    models.TextField(
                        blank=True, help_text="Nouveau texte (pour modifications)"
                    ),
                ),
                ("old_entity_type", models.CharField(blank=True, max_length=100)),
                ("new_entity_type", models.CharField(blank=True, max_length=100)),
                (
                    "original_annotator",
                    models.CharField(
                        blank=True,
                        help_text="Qui a créé l'annotation originale",
                        max_length=150,
                    ),
                ),
                (
                    "validation_status_before",
                    models.CharField(blank=True, max_length=50),
                ),
                (
                    "validation_status_after",
                    models.CharField(blank=True, max_length=50),
                ),
                (
                    "reason",
                    models.TextField(blank=True, help_text="Raison de l'action"),
                ),
                ("time_spent_seconds", models.IntegerField(blank=True, null=True)),
                (
                    "expert",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="expert_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Log Expert",
                "verbose_name_plural": "Logs Expert",
                "ordering": ["-timestamp"],
            },
        ),
    ]
