# Generated by Django 5.2.3 on 2025-07-22 10:07

import client.library.models
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DocumentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom de la catégorie')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Code')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('color', models.CharField(default='#3498db', max_length=7, verbose_name='Couleur')),
            ],
            options={
                'verbose_name': 'Catégorie de document',
                'verbose_name_plural': 'Catégories de documents',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nom du produit')),
                ('active_ingredient', models.CharField(max_length=255, verbose_name='Principe actif')),
                ('dosage', models.CharField(max_length=100, verbose_name='Dosage')),
                ('form', models.CharField(max_length=100, verbose_name='Forme')),
                ('therapeutic_area', models.CharField(max_length=200, verbose_name='Zone thérapeutique')),
                ('status', models.CharField(choices=[('commercialise', 'Commercialisé'), ('developpement', 'En développement'), ('arrete', 'Arrêté')], default='developpement', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Produit',
                'verbose_name_plural': 'Produits',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RegulatoryAuthority',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name="Nom de l'autorité")),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='Code')),
                ('country', models.CharField(max_length=100, verbose_name='Pays')),
                ('website', models.URLField(blank=True, verbose_name='Site web')),
            ],
            options={
                'verbose_name': 'Autorité réglementaire',
                'verbose_name_plural': 'Autorités réglementaires',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500, verbose_name='Titre')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('document_type', models.CharField(choices=[('guideline', 'Guideline'), ('regulation', 'Régulation'), ('gmp', 'GMP'), ('ich', 'ICH'), ('qa', 'Q&A'), ('template', 'Template'), ('other', 'Autre')], max_length=20, verbose_name='Type de document')),
                ('source_url', models.URLField(blank=True, verbose_name='URL source')),
                ('reference_number', models.CharField(blank=True, max_length=100, verbose_name='Numéro de référence')),
                ('file', models.FileField(upload_to=client.library.models.document_upload_path, verbose_name='Fichier')),
                ('file_size', models.PositiveIntegerField(blank=True, null=True, verbose_name='Taille du fichier (bytes)')),
                ('language', models.CharField(choices=[('en', 'English'), ('fr', 'Français'), ('de', 'Deutsch'), ('es', 'Español'), ('it', 'Italiano'), ('multi', 'Multilingue')], default='en', max_length=10, verbose_name='Langue')),
                ('publication_date', models.DateField(verbose_name='Date de publication')),
                ('effective_date', models.DateField(blank=True, null=True, verbose_name="Date d'entrée en vigueur")),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name="Date d'expiration")),
                ('validation_status', models.CharField(choices=[('pending', 'En attente de validation'), ('validated', 'Validé'), ('rejected', 'Rejeté'), ('expired', 'Expiré')], default='pending', max_length=20, verbose_name='Statut de validation')),
                ('validated_by', models.CharField(blank=True, max_length=100, verbose_name='Validé par')),
                ('validation_date', models.DateTimeField(blank=True, null=True, verbose_name='Date de validation')),
                ('validation_notes', models.TextField(blank=True, verbose_name='Notes de validation')),
                ('tags', models.CharField(blank=True, max_length=500, verbose_name='Tags (séparés par des virgules)')),
                ('ctd_section', models.CharField(blank=True, max_length=50, verbose_name='Section CTD')),
                ('therapeutic_area', models.CharField(blank=True, max_length=200, verbose_name='Zone thérapeutique')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.CharField(blank=True, max_length=100, verbose_name='Créé par')),
                ('download_count', models.PositiveIntegerField(default=0, verbose_name='Nombre de téléchargements')),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='Nombre de vues')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='client.documentcategory', verbose_name='Catégorie')),
                ('authority', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='client.regulatoryauthority', verbose_name='Autorité réglementaire')),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ManufacturingSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=100, verbose_name='Pays')),
                ('city', models.CharField(max_length=100, verbose_name='Ville')),
                ('site_name', models.CharField(max_length=255, verbose_name='Nom du site')),
                ('gmp_certified', models.BooleanField(default=False, verbose_name='Certifié GMP')),
                ('gmp_expiry', models.DateField(blank=True, null=True, verbose_name='Expiration GMP')),
                ('last_audit', models.DateField(blank=True, null=True, verbose_name='Dernier audit')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sites', to='client.product')),
            ],
            options={
                'verbose_name': 'Site de fabrication',
                'verbose_name_plural': 'Sites de fabrication',
            },
        ),
        migrations.CreateModel(
            name='ProductVariation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variation_type', models.CharField(choices=[('type_ia', 'Type IA'), ('type_ib', 'Type IB'), ('type_ii', 'Type II')], max_length=10)),
                ('title', models.CharField(max_length=255, verbose_name='Titre')),
                ('description', models.TextField(verbose_name='Description')),
                ('submission_date', models.DateField(verbose_name='Date de soumission')),
                ('approval_date', models.DateField(blank=True, null=True, verbose_name="Date d'approbation")),
                ('status', models.CharField(choices=[('soumis', 'Soumis'), ('en_cours', 'En cours'), ('approuve', 'Approuvé'), ('rejete', 'Rejeté')], default='soumis', max_length=20)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variations', to='client.product')),
            ],
            options={
                'verbose_name': 'Variation produit',
                'verbose_name_plural': 'Variations produits',
                'ordering': ['-submission_date'],
            },
        ),
        migrations.CreateModel(
            name='ReportHeatmap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('authorization_delay', models.IntegerField(blank=True, null=True)),
                ('variation_delay', models.IntegerField(blank=True, null=True)),
                ('renewal_delay', models.IntegerField(blank=True, null=True)),
                ('authorization_status', models.CharField(default='good', max_length=10)),
                ('variation_status', models.CharField(default='good', max_length=10)),
                ('renewal_status', models.CharField(default='good', max_length=10)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='client.product')),
            ],
            options={
                'verbose_name': 'Heatmap Data',
                'verbose_name_plural': 'Heatmap Data',
            },
        ),
        migrations.CreateModel(
            name='ReportKPI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('period', models.CharField(default='30d', max_length=10)),
                ('total_submissions', models.IntegerField(default=0)),
                ('average_delay', models.FloatField(default=0.0)),
                ('success_rate', models.FloatField(default=0.0)),
                ('delayed_count', models.IntegerField(default=0)),
                ('submissions_trend', models.FloatField(default=0.0)),
                ('delay_trend', models.FloatField(default=0.0)),
                ('success_trend', models.FloatField(default=0.0)),
                ('delayed_trend', models.FloatField(default=0.0)),
                ('trend_data', models.JSONField(default=dict)),
                ('status_data', models.JSONField(default=dict)),
            ],
            options={
                'verbose_name': 'KPI Report',
                'verbose_name_plural': 'KPIs Reports',
                'unique_together': {('date', 'period')},
            },
        ),
        migrations.CreateModel(
            name='ReportSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('autorisation', 'Autorisation initiale'), ('variation_ia', 'Variation Type IA'), ('variation_ib', 'Variation Type IB'), ('variation_ii', 'Variation Type II'), ('renouvellement', 'Renouvellement')], max_length=20, verbose_name='Type de soumission')),
                ('status', models.CharField(choices=[('en-cours', 'En cours'), ('approuve', 'Approuvé'), ('rejete', 'Rejeté'), ('en-attente', 'En attente')], default='en-cours', max_length=20)),
                ('submission_date', models.DateField(verbose_name='Date de soumission')),
                ('estimated_completion', models.DateField(verbose_name="Date d'achèvement estimée")),
                ('actual_completion', models.DateField(blank=True, null=True, verbose_name="Date d'achèvement réelle")),
                ('responsible', models.CharField(max_length=100, verbose_name='Responsable')),
                ('progress', models.IntegerField(default=0, verbose_name='Progression (%)')),
                ('team', models.CharField(blank=True, max_length=50, verbose_name='Équipe')),
                ('priority', models.CharField(default='normale', max_length=20, verbose_name='Priorité')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='client.product')),
            ],
            options={
                'verbose_name': 'Soumission réglementaire',
                'verbose_name_plural': 'Soumissions réglementaires',
                'ordering': ['-submission_date'],
            },
        ),
        migrations.CreateModel(
            name='DocumentTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(choices=[('en', 'English'), ('fr', 'Français'), ('de', 'Deutsch'), ('es', 'Español'), ('it', 'Italiano'), ('multi', 'Multilingue')], max_length=10, verbose_name='Langue de traduction')),
                ('title', models.CharField(max_length=500, verbose_name='Titre traduit')),
                ('description', models.TextField(blank=True, verbose_name='Description traduite')),
                ('file', models.FileField(upload_to=client.library.models.document_upload_path, verbose_name='Fichier traduit')),
                ('translation_method', models.CharField(choices=[('manual', 'Manuel'), ('ai', 'IA'), ('hybrid', 'Hybride')], max_length=20, verbose_name='Méthode de traduction')),
                ('validated', models.BooleanField(default=False, verbose_name='Traduction validée')),
                ('validated_by', models.CharField(blank=True, max_length=100, verbose_name='Validé par')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('original_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='client.document')),
            ],
            options={
                'verbose_name': 'Traduction de document',
                'verbose_name_plural': 'Traductions de documents',
                'unique_together': {('original_document', 'language')},
            },
        ),
        migrations.CreateModel(
            name='DocumentVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=20, verbose_name='Version')),
                ('file', models.FileField(upload_to=client.library.models.document_upload_path, verbose_name='Fichier')),
                ('release_notes', models.TextField(blank=True, verbose_name='Notes de version')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(blank=True, max_length=100, verbose_name='Créé par')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='client.document')),
            ],
            options={
                'verbose_name': 'Version de document',
                'verbose_name_plural': 'Versions de documents',
                'ordering': ['-created_at'],
                'unique_together': {('document', 'version')},
            },
        ),
        migrations.CreateModel(
            name='ProductSpecification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_code', models.CharField(max_length=3, verbose_name='Code pays')),
                ('amm_number', models.CharField(max_length=100, verbose_name='Numéro AMM')),
                ('approval_date', models.DateField(verbose_name="Date d'approbation")),
                ('renewal_date', models.DateField(verbose_name='Date de renouvellement')),
                ('ctd_dossier_complete', models.BooleanField(default=False, verbose_name='Dossier CTD complet')),
                ('gmp_certificate', models.BooleanField(default=False, verbose_name='Certificat GMP')),
                ('inspection_report', models.BooleanField(default=False, verbose_name="Rapport d'inspection")),
                ('rcp_etiquetage', models.BooleanField(default=False, verbose_name='RCP et étiquetage')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specifications', to='client.product')),
            ],
            options={
                'verbose_name': 'Spécification produit',
                'verbose_name_plural': 'Spécifications produits',
                'unique_together': {('product', 'country_code')},
            },
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['document_type'], name='client_docu_documen_4a69e3_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['validation_status'], name='client_docu_validat_3cb557_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['authority'], name='client_docu_authori_098d27_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['publication_date'], name='client_docu_publica_da40d7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='reportheatmap',
            unique_together={('product', 'date')},
        ),
    ]
